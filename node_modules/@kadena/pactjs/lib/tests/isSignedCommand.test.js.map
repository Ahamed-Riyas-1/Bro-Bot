{"version":3,"file":"isSignedCommand.test.js","sourceRoot":"","sources":["../../src/tests/isSignedCommand.test.ts"],"names":[],"mappings":";;AACA,mCAA8C;AAC9C,wDAA0E;AAE1E,MAAM,mBAAmB,GAAqB;IAC5C,IAAI,EAAE,6CAA6C;IACnD,IAAI,EAAE;QACJ;YACE,GAAG,EAAE,kIAAkI;SACxI;KACF;IACD,GAAG,EAAE,6gBAA6gB;CACnhB,CAAC;AAEF,MAAM,qBAAqB,GAAqB;IAC9C,IAAI,EAAE,6CAA6C;IACnD,IAAI,EAAE,CAAC,SAAS,CAAC;IACjB,GAAG,EAAE,6gBAA6gB;CACnhB,CAAC;AAEF,IAAA,iBAAQ,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAA,WAAE,EAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,MAAM,GAAG,IAAA,iCAAe,EAAC,mBAAmB,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAY,IAAI,CAAC;QAE/B,IAAA,eAAM,EAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,MAAM,GAAG,IAAA,iCAAe,EAAC,qBAAqB,CAAC,CAAC;QACtD,MAAM,QAAQ,GAAY,KAAK,CAAC;QAEhC,IAAA,eAAM,EAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,iBAAQ,EAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAA,WAAE,EAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,qCAAmB,EAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,2DAA2D,EAAE,GAAG,EAAE;QACnE,MAAM,MAAM,GAAa,IAAA,qCAAmB,EAAC,mBAAmB,CAAC,CAAC;QAClE,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,6CAA6C;YACnD,IAAI,EAAE;gBACJ;oBACE,GAAG,EAAE,kIAAkI;iBACxI;aACF;YACD,GAAG,EAAE,6gBAA6gB;SACnhB,CAAC;QAEF,IAAA,eAAM,EAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjC,IAAA,eAAM,EAAC,OAAO,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,QAAQ,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import type { ICommand, IUnsignedCommand } from '@kadena/types';\nimport { describe, expect, it } from 'vitest';\nimport { ensureSignedCommand, isSignedCommand } from '../isSignedCommand';\n\nconst sampleSignedCommand: IUnsignedCommand = {\n  hash: 'pMohh9G2NT1jQn4byK1iwvoLopbnU86NeNPSUq8I0ik',\n  sigs: [\n    {\n      sig: '26d765e3b812d59d80ffbd034d4fc4a1a24f8d0c3929586575617089e5098d967955d348608b515ae9ff7871b46726ffc71252d53b9e562d5bcf3bfe66292906',\n    },\n  ],\n  cmd: '{\"networkId\":null,\"payload\":{\"exec\":{\"data\":{\"accounts-admin-keyset\":[\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"]},\"code\":\"(define-keyset \\'k (read-keyset \\\\\"accounts-admin-keyset\\\\\"))\\\\n(module system \\'k\\\\n  (defun get-system-time ()\\\\n    (time \\\\\"2017-10-31T12:00:00Z\\\\\")))\\\\n(get-system-time)\"}},\"signers\":[{\"pubKey\":\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"}],\"meta\":{\"creationTime\":0,\"ttl\":0,\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\"},\"nonce\":\"\\\\\"step01\\\\\"\"}',\n};\n\nconst sampleUnsignedCommand: IUnsignedCommand = {\n  hash: 'pMohh9G2NT1jQn4byK1iwvoLopbnU86NeNPSUq8I0ik',\n  sigs: [undefined],\n  cmd: '{\"networkId\":null,\"payload\":{\"exec\":{\"data\":{\"accounts-admin-keyset\":[\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"]},\"code\":\"(define-keyset \\'k (read-keyset \\\\\"accounts-admin-keyset\\\\\"))\\\\n(module system \\'k\\\\n  (defun get-system-time ()\\\\n    (time \\\\\"2017-10-31T12:00:00Z\\\\\")))\\\\n(get-system-time)\"}},\"signers\":[{\"pubKey\":\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"}],\"meta\":{\"creationTime\":0,\"ttl\":0,\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\"},\"nonce\":\"\\\\\"step01\\\\\"\"}',\n};\n\ndescribe('isSignedCommand', () => {\n  it('Returns true when command is signed', () => {\n    const actual = isSignedCommand(sampleSignedCommand);\n    const expected: boolean = true;\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('Returns false when command is unsigned', () => {\n    const actual = isSignedCommand(sampleUnsignedCommand);\n    const expected: boolean = false;\n\n    expect(expected).toEqual(actual);\n  });\n});\n\ndescribe('ensureSignedCommand', () => {\n  it('throws error when command is unsigned', () => {\n    expect(() => ensureSignedCommand(sampleUnsignedCommand)).toThrow();\n  });\n\n  it('returns command in `ICommand` type when command is signed', () => {\n    const actual: ICommand = ensureSignedCommand(sampleSignedCommand);\n    const expected: ICommand = {\n      hash: 'pMohh9G2NT1jQn4byK1iwvoLopbnU86NeNPSUq8I0ik',\n      sigs: [\n        {\n          sig: '26d765e3b812d59d80ffbd034d4fc4a1a24f8d0c3929586575617089e5098d967955d348608b515ae9ff7871b46726ffc71252d53b9e562d5bcf3bfe66292906',\n        },\n      ],\n      cmd: '{\"networkId\":null,\"payload\":{\"exec\":{\"data\":{\"accounts-admin-keyset\":[\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"]},\"code\":\"(define-keyset \\'k (read-keyset \\\\\"accounts-admin-keyset\\\\\"))\\\\n(module system \\'k\\\\n  (defun get-system-time ()\\\\n    (time \\\\\"2017-10-31T12:00:00Z\\\\\")))\\\\n(get-system-time)\"}},\"signers\":[{\"pubKey\":\"ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d\"}],\"meta\":{\"creationTime\":0,\"ttl\":0,\"gasLimit\":0,\"chainId\":\"\",\"gasPrice\":0,\"sender\":\"\"},\"nonce\":\"\\\\\"step01\\\\\"\"}',\n    };\n\n    expect(expected).toEqual(actual);\n    expect(typeof actual).toEqual(typeof expected);\n  });\n});\n"]}