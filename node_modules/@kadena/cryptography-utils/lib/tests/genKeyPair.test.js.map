{"version":3,"file":"genKeyPair.test.js","sourceRoot":"","sources":["../../src/tests/genKeyPair.test.ts"],"names":[],"mappings":";;AAAA,mCAA0C;AAC1C,8CAA2C;AAC3C,WAAE,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;IACxB,OAAO;QACL,OAAO,EAAE;YACP,IAAI,EAAE;gBACJ,OAAO,EAAE,GAAG,EAAE;oBACZ,OAAO;wBACL,SAAS,EAAE,gBAAgB;wBAC3B,SAAS,EAAE,gBAAgB;qBAC5B,CAAC;gBACJ,CAAC;aACF;SACF;KACF,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAA,aAAI,EAAC,yBAAyB,EAAE,GAAG,EAAE;IACnC,MAAM,MAAM,GAAG,IAAA,uBAAU,GAAE,CAAC;IAE5B,IAAA,eAAM,EAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;IACjE,IAAA,eAAM,EAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC","sourcesContent":["import { expect, test, vi } from 'vitest';\nimport { genKeyPair } from '../genKeyPair';\nvi.mock('tweetnacl', () => {\n  return {\n    default: {\n      sign: {\n        keyPair: () => {\n          return {\n            publicKey: '1234567abcdefg',\n            secretKey: '1234567abcdefg',\n          };\n        },\n      },\n    },\n  };\n});\n\ntest('generates a new keyPair', () => {\n  const actual = genKeyPair();\n\n  expect(actual.publicKey).toEqual('3132333435363761626364656667');\n  expect(actual.secretKey).toEqual('3132333435363761626364656667');\n});\n"]}