"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = require("assert");
const vitest_1 = require("vitest");
const base64UrlEncode_1 = require("../base64UrlEncode");
const uint8ArrayToStr_1 = require("../uint8ArrayToStr");
(0, vitest_1.describe)('base64UrlEncode', () => {
    (0, vitest_1.it)('takes in a string and outputs a Base 64 URL encoded string', () => {
        const str = (0, uint8ArrayToStr_1.uint8ArrayToStr)(new Uint8Array([
            205, 170, 167, 69, 13, 17, 99, 60, 83, 113, 200, 237, 98, 128, 111, 66,
            192, 232, 228, 175, 102, 198, 190, 19, 16, 95, 135, 33, 132, 226, 228,
            154,
        ]));
        const actual = (0, base64UrlEncode_1.base64UrlEncode)(str);
        const expected = 'zaqnRQ0RYzxTccjtYoBvQsDo5K9mxr4TEF-HIYTi5Jo';
        (0, vitest_1.expect)(expected).toEqual(actual);
    });
    (0, vitest_1.it)('throws InvalidCharacterError', () => {
        const str = 'this is a special string ðŸ§ ';
        (0, assert_1.throws)(() => (0, base64UrlEncode_1.base64UrlEncode)(str));
        try {
            (0, base64UrlEncode_1.base64UrlEncode)(str);
        }
        catch (error) {
            (0, vitest_1.expect)(error.name).toBe('InvalidCharacterError');
        }
    });
});
//# sourceMappingURL=base64UrlEncode.test.js.map