{"version":3,"file":"send.js","sourceRoot":"","sources":["../src/send.ts"],"names":[],"mappings":";;;AACA,mDAAgD;AAChD,+EAA4E;AAC5E,yCAAsC;AACtC;;;;;;;;;;GAUG;AACI,KAAK,UAAU,IAAI,CACxB,WAA6B,EAC7B,OAAe;IAEf,MAAM,OAAO,GAAG,IAAA,yDAA2B,EAAC,WAAW,CAAC,CAAC;IACzD,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,OAAO,cAAc,CAAC,CAAC;IAElD,MAAM,QAAQ,GAAG,MAAM,IAAA,aAAK,EAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,OAAO,IAAA,6BAAa,EAAe,QAAQ,CAAC,CAAC;AAC/C,CAAC;AATD,oBASC","sourcesContent":["import type { ISendRequestBody, SendResponse } from './interfaces/PactAPI';\nimport { parseResponse } from './parseResponse';\nimport { stringifyAndMakePOSTRequest } from './stringifyAndMakePOSTRequest';\nimport { fetch } from './utils/fetch';\n/**\n * Asynchronous submission of one or more public (unencrypted) commands to the blockchain for execution.\n *\n * Corresponds to `fetchSendRaw` and `fetchSend` functions:\n * https://github.com/kadena-io/pact-lang-api/blob/master/pact-lang-api.js#L601\n * https://github.com/kadena-io/pact-lang-api/blob/master/pact-lang-api.js#L589\n *\n * @param requestBody - Non-empty array of Pact commands to submit to server.\n * @param apiHost - API host running a Pact-enabled server.\n * @alpha\n */\nexport async function send(\n  requestBody: ISendRequestBody,\n  apiHost: string,\n): Promise<SendResponse> {\n  const request = stringifyAndMakePOSTRequest(requestBody);\n  const sendUrl = new URL(`${apiHost}/api/v1/send`);\n\n  const response = await fetch(sendUrl.toString(), request);\n  return parseResponse<SendResponse>(response);\n}\n"]}